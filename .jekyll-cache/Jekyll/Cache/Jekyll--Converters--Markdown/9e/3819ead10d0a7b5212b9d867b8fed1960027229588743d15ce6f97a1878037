I"¢<h3 id="Î¨∏Ï†ú">Î¨∏Ï†ú</h3>

<p>Make an eventing system mix-in that adds .trigger() and .on() to any input object.</p>

<p>Example usage:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="nx">mixEvents</span><span class="p">({</span> <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Alice</span><span class="dl">"</span><span class="p">,</span> <span class="na">age</span><span class="p">:</span> <span class="mi">30</span> <span class="p">});</span>
<span class="nx">obj</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">"</span><span class="s2">ageChange</span><span class="dl">"</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="c1">// On takes an event name and a callback function</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Age changed</span><span class="dl">"</span><span class="p">);</span>
<span class="p">});</span>
<span class="nx">obj</span><span class="p">.</span><span class="nx">age</span><span class="o">++</span><span class="p">;</span>
<span class="nx">obj</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="dl">"</span><span class="s2">ageChange</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// This should call our callback! Should log 'age changed'.</span>
</code></pre></div></div>

<p>Caveats:</p>

<ul>
  <li>mixEvents should return the original object it was passed after extending it.</li>
  <li>If we repeatedly call .on with the same event name, it should continue to call the old function as well. That is to say, we can have multiple listeners for an event.</li>
  <li>If <code class="highlighter-rouge">obj.trigger</code> is called with additional arguments, pass those to the listeners.</li>
  <li>It is not necessary to write a way to remove listeners.</li>
</ul>

<h3 id="ÌíÄÏù¥">ÌíÄÏù¥</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">mixEvents</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">obj</span><span class="p">.</span><span class="nx">on</span> <span class="o">=</span> <span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">cb</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">name</span><span class="p">])</span> <span class="p">{</span>
      <span class="nx">obj</span><span class="p">[</span><span class="nx">name</span><span class="p">]</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">name</span><span class="p">].</span><span class="nx">concat</span><span class="p">([</span><span class="nx">cb</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">obj</span><span class="p">)]);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="nx">obj</span><span class="p">[</span><span class="nx">name</span><span class="p">]</span> <span class="o">=</span> <span class="p">[].</span><span class="nx">concat</span><span class="p">([</span><span class="nx">cb</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">obj</span><span class="p">)]);</span>
    <span class="p">}</span>
  <span class="p">};</span>
  <span class="nx">obj</span><span class="p">.</span><span class="nx">trigger</span> <span class="o">=</span> <span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="p">...</span><span class="nx">args</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">name</span><span class="p">])</span> <span class="p">{</span>
      <span class="nx">obj</span><span class="p">[</span><span class="nx">name</span><span class="p">].</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">func</span> <span class="o">=&gt;</span> <span class="nx">func</span><span class="p">(...</span><span class="nx">args</span><span class="p">));</span>
    <span class="p">}</span>
  <span class="p">};</span>
  <span class="k">return</span> <span class="nx">obj</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>
:ET