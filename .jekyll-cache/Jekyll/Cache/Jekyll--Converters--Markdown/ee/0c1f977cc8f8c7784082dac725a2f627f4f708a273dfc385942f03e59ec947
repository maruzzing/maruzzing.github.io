I"4<p>미디엄 블로그에 있던 글도 옮기고,이것저것 하다보니 벌써 post가 쌓이고 있다. 개인적으로 유저의 입장에서 무한 스크롤을 별로 선호하지 않아 이참에 페이징 기능을 추가하기로 했다. 필요한 기능을 바로 배우고 적용하기 ! 😎</p>

<h2 id="1-jekyll-pagination-플러그인-설치">1. jekyll-pagination 플러그인 설치</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="nb">install </span>jekyll-paginate
</code></pre></div></div>

<h2 id="2-_configyml-파일-업데이트">2. _config.yml 파일 업데이트</h2>

<p><strong>maruzzing.github.io는 Jelly Now라는 theme을 사용하고 있기 때문에 Gemfile을 수정하거나, bundle 업데이트를 할 필요는 없지만,
다른 theme을 사용하고 있거나, theme 없이 처음부터 만들었다면, <a href="https://jekyllrb.com/docs/plugins/installation/">공식문서</a>를 참고하여 플러그인을 설치해야 한다.</strong></p>

<p><code class="highlighter-rouge">_config.yml</code> 파일 내, gems부분에 <code class="highlighter-rouge">jekyll-pagination</code>를 추가하고, 한 페이지 당 표시하고자 하는 포스트의 최대 개수, 그리고 url 규칙을 추가해 준다.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">gems</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">jekyll-pagination</span> <span class="c1">#추가</span>

<span class="na">paginate</span><span class="pi">:</span> <span class="m">10</span> <span class="c1"># 한 페이지 당 표시하고자 하는 포스트의 최대 개수</span>
<span class="na">paginate_path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/page:num/"</span> <span class="c1"># URL 규칙</span>
</code></pre></div></div>

<h2 id="3-페이징된-포스트-렌더링-하기">3. 페이징된 포스트 렌더링 하기</h2>

<p><code class="highlighter-rouge">index.html</code> 파일 내, 포스트 렌더링 하는 부분을 고쳐보자.</p>

<p>현재 for 반복문 내, <code class="highlighter-rouge">site.posts</code>를 <code class="highlighter-rouge">paginator.posts</code>로 고치면 된다.</p>

<figure class="highlight"><pre><code class="language-liquid" data-lang="liquid"> <span class="p">{%</span><span class="w"> </span><span class="nt">for</span><span class="w"> </span><span class="nv">post</span><span class="w"> </span><span class="nt">in</span><span class="w"> </span><span class="nv">paginator.posts</span><span class="w"> </span><span class="p">%}</span> <span class="p">{%</span><span class="w"> </span><span class="nt">endfor</span><span class="w"> </span><span class="p">%}</span> </code></pre></figure>

<p>그럼 이제 <code class="highlighter-rouge">_config.yml</code>에 설정한 갯수 만큼의 포스트만 렌더 될 것이다.</p>

<h2 id="4-페이징된-버튼-만들기">4. 페이징된 버튼 만들기</h2>

<p><a href="https://jekyllrb.com/docs/pagination/">Jekyll 공식문서의 Pagination</a> 파트를 보면, <code class="highlighter-rouge">paginator.total_posts</code>라는 변수를 사용하여 <strong>전체 페이지수</strong>를 알 수 있으며, <code class="highlighter-rouge">paginator.page</code> 로 <strong>현재 페이지의 페이지 number</strong>를 알 수 있다.<br />
이를 이용하여 1 부터 <code class="highlighter-rouge">paginator.total_posts</code> 까지 숫자 버튼을 렌더하고, 현재 페이지와, 번호가 같은 경우 class 명을 ‘active’로 주어 현재 페이지를 표시 해 보겠다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- Pagination links --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pagination"</span><span class="nt">&gt;</span>
   {% assign maxPageNum = paginator.total_pages %} {% assign class
  ='unactive' %} {% assign currentPage = paginator.page %} {% for i in
  (1..maxPageNum)%} {% if currentPage == i %} {% assign class = 'active' %}{%
  else %}{% assign class = 'unactive' %} {% endif %} {% if i == 1 %}
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"pageNum {{ class }}"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ site.baseurl }}/"</span><span class="nt">&gt;</span>{{ i }}<span class="nt">&lt;/a&gt;&lt;/span</span>
  <span class="nt">&gt;</span>
  {% else %}
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"pageNum {{ class }}"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ site.baseurl }}/page{{ i }}/"</span><span class="nt">&gt;</span>{{ i }}<span class="nt">&lt;/a&gt;&lt;/span</span>
  <span class="nt">&gt;</span>
  {% endif %} {% endfor %}
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p><br />
이제 입맛에 맞게 css를 꾸미면 완성 !</p>
:ET