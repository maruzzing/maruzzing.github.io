I"?%<p><img src="https://cdn-images-1.medium.com/max/1600/1*-eevV8dsUsav7HsztXC1Vg.gif" alt="inline text editor" title="inline text editor" /></p>

<p><br /></p>

<p>위의 사진과 같이 인라인 텍스트 편집기(inline text editor)는 React로 어떻게 만들 수 있을까?</p>

<p>이 문제는 <a href="https://reactjs.org/docs/conditional-rendering.html">조건부 랜더링(conditional rendering)</a>으로 간단하게 해결할 수 있다. 조건부 랜더링이란, if문을 사용하여, state에 따라 조건적으로 렌더하는 것이다. 🐶🍯</p>

<p>더블클릭 시 편집할 수 있도록 input창이 생기고, 값을 입력 한 후 엔터를 누르면 input창이 없어지도록 만들어 보겠다. 상위의 App 컴포넌트에서 props로 <code class="highlighter-rouge">initialValue=double click to edit</code>을 내려주었다.</p>

<p>이를 위해서는 먼저 해당 컴포넌트 내 <code class="highlighter-rouge">isEditable</code>이라는 state를 정의해 줘야 한다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">ItemListEntry</span> <span class="kd">extends</span> <span class="nx">React</span><span class="p">.</span><span class="nx">Component</span><span class="p">{</span>
  <span class="kd">constructor</span><span class="p">(</span><span class="nx">props</span><span class="p">){</span>
    <span class="k">super</span><span class="p">(</span><span class="nx">props</span><span class="p">)</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">state</span> <span class="o">=</span> <span class="p">{</span>
      <span class="na">text</span><span class="p">:</span> <span class="nx">props</span><span class="p">.</span><span class="nx">initialValue</span><span class="p">,</span>
      <span class="na">isEditable</span><span class="p">:</span> <span class="kc">false</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<p>그리고 event 발생 시, (여기선 onDoubleClick 사용) <code class="highlighter-rouge">isEditable state</code>를 변경하는 함수도 정의해 준다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">changeEditMode</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
    <span class="na">edit</span><span class="p">:</span> <span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">edit</span>
  <span class="p">})</span>
<span class="p">}</span> <span class="c1">// false인 edit의 상태를 true로 바꿔주는 역할</span>
</code></pre></div></div>

<p><br /></p>

<p>또한, input 창에 입력을 하면, display되는 text가 변경될 수 있도록 한다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">handleChange</span> <span class="o">=</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
    <span class="na">text</span><span class="p">:</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span>
  <span class="p">})</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<p>그리고 엔터를 치면 input창이 사라지고 입력된 텍스트가 display 될 수 있도록 한다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">handleKeyDown</span> <span class="o">=</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">if</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">key</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Enter</span><span class="dl">"</span><span class="p">){</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
      <span class="na">edit</span><span class="p">:</span> <span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">edit</span>
    <span class="p">})</span>
<span class="c1">// 만약 입력된 값을 상위 컴포넌트에서 저장/관리한다면, 저장하는 함수를 여기서 실행한다.</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<p>이제, <code class="highlighter-rouge">render()</code> 부분에서 처리해주어야할 부분이다. 먼저, 조건부 랜더링은 아래와 같이 3항 연산자로 작성해 준다. 아래 예시는 <code class="highlighter-rouge">isFamiliar</code> 라는 state가 <code class="highlighter-rouge">true</code>이면 ‘Hi! How have you been?’를 렌더하고, <code class="highlighter-rouge">false</code>이면 ‘Hello, nice to meet you’를 렌더하도록 하는 코드이다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">render</span><span class="p">(){</span>
  <span class="k">return</span><span class="p">(</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className=</span><span class="s2">"greeting"</span><span class="p">&gt;</span>
    <span class="si">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">isFamiliar</span> <span class="p">?</span>
    <span class="p">(</span><span class="nx">Hi</span><span class="o">!</span> <span class="nx">How</span> <span class="nx">have</span> <span class="nx">you</span> <span class="nx">been</span><span class="p">?)</span> <span class="c1">// 참일 때 렌더</span>
    <span class="p">:</span>
    <span class="p">(</span><span class="nx">Hello</span><span class="p">,</span> <span class="nx">nice</span> <span class="nx">to</span> <span class="nx">meet</span> <span class="nx">you</span><span class="p">)</span> <span class="c1">// 거짓일 때 렌더</span>
    <span class="si">}</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">)}</span>
</code></pre></div></div>

<p><br /></p>

<p>자, 그럼 다시 인라인 텍스트 편집기 예제로 돌아와서, 아래와 같이 코드를 작성하면 인라인 텍스트 편집기를 구현할 수 있다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">render</span><span class="p">(){</span>
  <span class="k">return</span><span class="p">(</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className=</span><span class="s2">"row list"</span><span class="p">&gt;</span>
    <span class="si">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">edit</span> <span class="p">?</span>
    <span class="p">(&lt;</span><span class="nt">input</span> <span class="na">className=</span><span class="s2">"form-control"</span> <span class="na">type=</span><span class="s2">"text"</span>
            <span class="na">value=</span><span class="si">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">text</span><span class="si">}</span>
            <span class="na">onChange=</span><span class="si">{</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">handleChange</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span><span class="si">}</span>
            <span class="nt">onKeyDown</span> <span class="err">=</span> <span class="err">{</span><span class="nt">this</span><span class="p">.</span><span class="nt">handleKeyDown</span><span class="err">}</span> <span class="p">/&gt;)</span>
    <span class="p">:</span>
    <span class="p">(&lt;</span><span class="nt">span</span> <span class="na">onDoubleClick=</span><span class="si">{</span><span class="p">()</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">changeEditMode</span><span class="p">()</span><span class="si">}</span><span class="p">&gt;</span>
        <span class="si">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">text</span><span class="si">}</span><span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;)</span><span class="si">}</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">)}</span>
</code></pre></div></div>

<p><br />
조건부 렌더링은 참 유용하게 쓸 수 있을 것 같다 !! 👍
<br /></p>
:ET