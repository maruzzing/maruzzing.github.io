I"<h3 id="문제">문제</h3>

<p>Given an array containing a deck of cards, implement a function that shuffles the deck.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">Example</span><span class="p">:</span> <span class="kd">var</span> <span class="nx">deck</span> <span class="o">=</span> <span class="nx">orderedDeck</span><span class="p">();</span>
<span class="c1">// ["A♥","2♥","3♥",...,"J♦","Q♦","K♦"]</span>
<span class="nx">shuffleDeck</span><span class="p">(</span><span class="nx">deck</span><span class="p">);</span>
<span class="c1">// ["2♠","J♣","A♦", ... ,"7♣","8♣","K♠"]</span>
</code></pre></div></div>

<h3 id="풀이">풀이</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">shuffleDeck</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">deck</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">deck</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">randomIndex</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="nx">deck</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
    <span class="nx">originCard</span> <span class="o">=</span> <span class="nx">deck</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
    <span class="nx">deck</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="nx">deck</span><span class="p">[</span><span class="nx">randomIndex</span><span class="p">];</span>
    <span class="nx">deck</span><span class="p">[</span><span class="nx">randomIndex</span><span class="p">]</span> <span class="o">=</span> <span class="nx">originCard</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">deck</span><span class="p">;</span>
<span class="p">};</span>

<span class="kd">var</span> <span class="nx">orderedDeck</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">suits</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">♥</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">♣</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">♠</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">♦</span><span class="dl">"</span><span class="p">];</span>
  <span class="kd">var</span> <span class="nx">values</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">A</span><span class="dl">"</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="dl">"</span><span class="s2">J</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Q</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">K</span><span class="dl">"</span><span class="p">];</span>
  <span class="kd">var</span> <span class="nx">deck</span> <span class="o">=</span> <span class="p">[];</span>

  <span class="nx">suits</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">suit</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">values</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">deck</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">value</span> <span class="o">+</span> <span class="nx">suit</span><span class="p">);</span>
    <span class="p">});</span>
  <span class="p">});</span>
  <span class="k">return</span> <span class="nx">deck</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>
:ET