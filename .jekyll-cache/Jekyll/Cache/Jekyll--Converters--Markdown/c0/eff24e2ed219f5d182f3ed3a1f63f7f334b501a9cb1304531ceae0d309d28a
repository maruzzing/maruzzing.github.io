I".<h3 id="문제">문제</h3>

<p>A Fibonacci sequence is a list of numbers that begins with 0 and 1, and each subsequent number is the sum of the previous two.</p>

<p>For example, the first five Fibonacci numbers are:
0 1 1 2 3</p>

<p>If n were 4, your function should return 3; for 5, it should return 5.</p>

<p>Write a function that accepts a number, n, and returns the nth Fibonacci number. Use a recursive solution to this problem; if you finish with time left over, implement an iterative solution.</p>

<h3 id="풀이">풀이</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">nthFibonacci</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">begins</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">];</span>
  <span class="kd">let</span> <span class="nx">nthNum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">n</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">begins</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span>
  <span class="p">}</span>
  <span class="kd">function</span> <span class="nx">fibonacci</span><span class="p">(</span><span class="nx">nth</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">temp</span> <span class="o">=</span> <span class="nx">begins</span><span class="p">[</span><span class="nx">nth</span> <span class="o">-</span> <span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="nx">begins</span><span class="p">[</span><span class="nx">nth</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">nth</span> <span class="o">===</span> <span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">nthNum</span> <span class="o">=</span> <span class="nx">temp</span><span class="p">;</span>
      <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nx">begins</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">temp</span><span class="p">);</span>
    <span class="nx">fibonacci</span><span class="p">(</span><span class="nx">nth</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="nx">fibonacci</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
  <span class="k">return</span> <span class="nx">nthNum</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>
:ET