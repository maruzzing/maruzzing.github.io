I"}u<p>기본적인 Apollo 서버 구축이 되었으니 이제 db을 연결해 볼 차례이다. 여기서는 db는 mysql을, ORM은 Sequelize를 사용할 예정이다.</p>

<h1 id="mysql과-시퀄라이즈-연결하기">MySQL과 시퀄라이즈 연결하기</h1>

<p>기본적으로 Express 서버이기 때문에 db를 연결하는 방법은 동일하다. 
먼저 필요 모듈을 설치한다.</p>

<h3 id="모듈-설치-및-프로젝트-초기화">모듈 설치 및 프로젝트 초기화</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>npm i mysql2 sequelize sequelize-cli path
</code></pre></div></div>
<p><br />
아래 명령어로 프로젝트를 초기화 하면 루트 디렉토리에 config, migrations, models, seeders 라는 폴더가 생성되는데, 이를 src/database 폴더 내로 옮겨준다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>npx sequelize init
</code></pre></div></div>

<p>sequelize-cli가 옮겨진 폴더 구조에서 db를 연결할 수 있도록 루트 디렉토리에 <code class="highlighter-rouge">.sequelizerc</code> 파일을 아래와 같이 생성한다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const path <span class="o">=</span> require<span class="o">(</span><span class="s1">'path'</span><span class="o">)</span><span class="p">;</span>

module.exports <span class="o">=</span> <span class="o">{</span>
    <span class="s1">'config'</span>: path.resolve<span class="o">(</span><span class="s1">'src/database/config/config.js'</span><span class="o">)</span>,
    <span class="s1">'models-path'</span>: path.resolve<span class="o">(</span><span class="s1">'src/database/models'</span><span class="o">)</span>,
    <span class="s1">'seeders-path'</span>: path.resolve<span class="o">(</span><span class="s1">'src/database/seeders'</span><span class="o">)</span>,
    <span class="s1">'migrations-path'</span>: path.resolve<span class="o">(</span><span class="s1">'src/database/migrations'</span><span class="o">)</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="sequelize-config-작성하고-db-생성하기">sequelize config 작성하고 db 생성하기</h3>

<p>먼저 조금 전에 만들어 진 config 폴더 내 <code class="highlighter-rouge">config.json</code> 파일을 수정해 주어야 하는데, 타입스크립트를 쓰고 있으므로 파일명을  <code class="highlighter-rouge">config.ts</code> 로 변경하고 아래와 같이 작성해 준다. 이를 위해서 <code class="highlighter-rouge">.env</code> 파일에 DB_USERNAME, DB_PASSWORD 등의 환경 변수를 정의해 준다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">dotenv</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">dotenv</span><span class="dl">'</span><span class="p">;</span>

<span class="nx">dotenv</span><span class="p">.</span><span class="nx">config</span><span class="p">();</span>

<span class="kd">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">development</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">username</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_USERNAME</span><span class="p">,</span>
    <span class="na">password</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_PASSWORD</span><span class="o">!</span><span class="p">,</span>
    <span class="na">database</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_NAME</span><span class="p">}</span><span class="s2">_development`</span><span class="p">,</span>
    <span class="na">host</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_HOST</span><span class="p">,</span>
    <span class="na">dialect</span><span class="p">:</span> <span class="dl">'</span><span class="s1">mysql</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">port</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_PORT</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="na">test</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">username</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_USERNAME</span><span class="p">,</span>
    <span class="na">password</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_PASSWORD</span><span class="o">!</span><span class="p">,</span>
    <span class="na">database</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_NAME</span><span class="p">}</span><span class="s2">_test`</span><span class="p">,</span>
    <span class="na">host</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_HOST</span><span class="p">,</span>
    <span class="na">dialect</span><span class="p">:</span> <span class="dl">'</span><span class="s1">mysql</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">port</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_PORT</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="na">production</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">username</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_USERNAME</span><span class="p">,</span>
    <span class="na">password</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_PASSWORD</span><span class="o">!</span><span class="p">,</span>
    <span class="na">database</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_NAME</span><span class="p">}</span><span class="s2">_production`</span><span class="p">,</span>
    <span class="na">host</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_HOST</span><span class="p">,</span>
    <span class="na">dialect</span><span class="p">:</span> <span class="dl">'</span><span class="s1">mysql</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">port</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DB_PORT</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">config</span><span class="p">;</span>
</code></pre></div></div>

<p>여기까지 하고 나면 <code class="highlighter-rouge">npx sequelize db:create</code> 커맨드로 config 파일의 내용에 따라 db를 생성할 수 있는데 <code class="highlighter-rouge">.ts</code> 파일에서는 아래와 같은 오류가 나기 때문에 수동으로 mysql에 해당하는 환경의 database 이름으로 db를 생성해 주고 연결하는 방법을 사용했다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ERROR: Error reading "src/database/config/config.js". Error: Error: Cannot find module '/Users/maruzzing/Desktop/dev/self/jtz/jtz-user-api/src/database/config/config.js'
</code></pre></div></div>
<h3 id="모델-정의하기">모델 정의하기</h3>

<p>이제 모델 정의 및 연결을 위해 <code class="highlighter-rouge">src/database/models/index.js</code> 파일을 수정해 준다. 먼저 <code class="highlighter-rouge">index.ts</code> 파일로 변경한 뒤 src/database/models 폴더 내에 <code class="highlighter-rouge">sequelize.ts</code> 파일을 생성하고 아래와 같이 시퀄라이즈 인스턴스를 생성해 준다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Sequelize</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">sequelize</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">config</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">../config/config</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">env</span> <span class="o">=</span>
  <span class="p">(</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">NODE_ENV</span> <span class="k">as</span> <span class="dl">'</span><span class="s1">production</span><span class="dl">'</span> <span class="o">|</span> <span class="dl">'</span><span class="s1">test</span><span class="dl">'</span> <span class="o">|</span> <span class="dl">'</span><span class="s1">development</span><span class="dl">'</span><span class="p">)</span> <span class="o">||</span>
  <span class="dl">'</span><span class="s1">development</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="p">{</span> <span class="nx">database</span><span class="p">,</span> <span class="nx">username</span><span class="p">,</span> <span class="nx">password</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">config</span><span class="p">[</span><span class="nx">env</span><span class="p">];</span>
<span class="kd">const</span> <span class="nx">sequelize</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Sequelize</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">username</span><span class="p">,</span> <span class="nx">password</span><span class="p">,</span> <span class="nx">config</span><span class="p">[</span><span class="nx">env</span><span class="p">]);</span>

<span class="k">export</span> <span class="p">{</span> <span class="nx">sequelize</span> <span class="p">};</span>
</code></pre></div></div>

<p>다시 <code class="highlighter-rouge">src/database/models/index.ts</code> 파일로 돌아와 원래 있더 내용은 삭제하고 아래와 같이 작성한다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="o">*</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./sequelize</span><span class="dl">'</span><span class="p">;</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">models</span> <span class="o">=</span> <span class="p">{};</span>
</code></pre></div></div>

<p>이제 본격적으로 모델을 정의해 줄 차례이다. 아래와 이미지와 같이 1:N 관계의 User와 Project 모델을 정의해 보자.</p>

<div style="display: flex; justify-content: center; margin-top:-1em">
  <img src="/images/graphql-db-structure.png" alt="graphql-db-structure" width="500em" />
</div>

<p>타입스크립트를 이용한 모델 정의 방법은 <a href="https://sequelize.org/master/manual/typescript.html">sequelize 공식 문서</a>에서 자세하게 알아볼 수 있다. 먼저, src/database/models 폴더 내에 <code class="highlighter-rouge">project.ts</code> 파일을 만들고 아래와 같은 형식으로 모델을 정의해 준다. 테이블을 정의하고 초기화 해줄 때 이전에 <code class="highlighter-rouge">sequelize.ts</code> 파일에서 만들었던 sequelize 인스턴스를 꼭 넘겨주어야 한다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">Model</span><span class="p">,</span> <span class="nx">DataTypes</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">sequelize</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">sequelize</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./sequelize</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">class</span> <span class="nx">Project</span> <span class="kd">extends</span> <span class="nx">Model</span> <span class="p">{</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">id</span><span class="o">!</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">ownerId</span><span class="o">!</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>

  <span class="kr">public</span> <span class="nx">title</span><span class="o">!</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">content</span><span class="o">!</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>

  <span class="c1">// timestamps!</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">createdAt</span><span class="o">!</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">updatedAt</span><span class="o">!</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">Project</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span>
  <span class="p">{</span>
    <span class="na">title</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="k">new</span> <span class="nx">DataTypes</span><span class="p">.</span><span class="nx">STRING</span><span class="p">(</span><span class="mi">128</span><span class="p">),</span>
      <span class="na">allowNull</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="na">content</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="k">new</span> <span class="nx">DataTypes</span><span class="p">.</span><span class="nx">STRING</span><span class="p">(</span><span class="mi">4096</span><span class="p">),</span>
      <span class="na">allowNull</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="p">},</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">tableName</span><span class="p">:</span> <span class="dl">'</span><span class="s1">projects</span><span class="dl">'</span><span class="p">,</span>
    <span class="nx">sequelize</span><span class="p">,</span> <span class="c1">// required</span>
  <span class="p">},</span>
<span class="p">);</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">Project</span><span class="p">;</span>
</code></pre></div></div>

<p>동일한 디렉토리에 <code class="highlighter-rouge">user.ts</code> 파일을 만들고 아래와 같이 모델을 정의해 준다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span>
  <span class="nx">Model</span><span class="p">,</span>
  <span class="nx">DataTypes</span><span class="p">,</span>
<span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">sequelize</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">sequelize</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./sequelize</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">class</span> <span class="nx">User</span> <span class="kd">extends</span> <span class="nx">Model</span> <span class="p">{</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">id</span><span class="o">!</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">email</span><span class="o">!</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">password</span><span class="o">!</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>

  <span class="c1">// timestamps!</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">createdAt</span><span class="o">!</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">updatedAt</span><span class="o">!</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">User</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span>
  <span class="p">{</span>
    <span class="na">email</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="k">new</span> <span class="nx">DataTypes</span><span class="p">.</span><span class="nx">STRING</span><span class="p">(</span><span class="mi">128</span><span class="p">),</span>
      <span class="na">allowNull</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="na">password</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="k">new</span> <span class="nx">DataTypes</span><span class="p">.</span><span class="nx">STRING</span><span class="p">(</span><span class="mi">128</span><span class="p">),</span>
      <span class="na">allowNull</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="p">},</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">tableName</span><span class="p">:</span> <span class="dl">'</span><span class="s1">users</span><span class="dl">'</span><span class="p">,</span>
    <span class="nx">sequelize</span><span class="p">,</span> <span class="c1">// required</span>
  <span class="p">},</span>
<span class="p">);</span>
<span class="k">export</span> <span class="k">default</span> <span class="nx">User</span><span class="p">;</span>
</code></pre></div></div>

<p>이제 1:N 관계 설정을 할 차례인데, 아래와 같이 간단하게 관계를 설정하고, 다양한 메서드를 사용할 수 있다. 비슷한 방식으로 belongsTo, hasOne 등 다양한 릴레이션도 구현할 수 있다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span>
  <span class="nx">Model</span><span class="p">,</span>
  <span class="nx">DataTypes</span><span class="p">,</span>
  <span class="nx">HasManyGetAssociationsMixin</span><span class="p">,</span>
  <span class="nx">HasManyAddAssociationMixin</span><span class="p">,</span>
  <span class="nx">HasManyHasAssociationMixin</span><span class="p">,</span>
  <span class="nx">HasManyCountAssociationsMixin</span><span class="p">,</span>
  <span class="nx">HasManyCreateAssociationMixin</span><span class="p">,</span>
<span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">sequelize</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">sequelize</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./sequelize</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">Project</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./project</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">class</span> <span class="nx">User</span> <span class="kd">extends</span> <span class="nx">Model</span> <span class="p">{</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">id</span><span class="o">!</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">email</span><span class="o">!</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">password</span><span class="o">!</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>

  <span class="c1">// timestamps!</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">createdAt</span><span class="o">!</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">updatedAt</span><span class="o">!</span><span class="p">:</span> <span class="nb">Date</span><span class="p">;</span>

  <span class="kr">public</span> <span class="nx">getProjects</span><span class="o">!</span><span class="p">:</span> <span class="nx">HasManyGetAssociationsMixin</span><span class="o">&lt;</span><span class="nx">Project</span><span class="o">&gt;</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">addProject</span><span class="o">!</span><span class="p">:</span> <span class="nx">HasManyAddAssociationMixin</span><span class="o">&lt;</span><span class="nx">Project</span><span class="p">,</span> <span class="nx">number</span><span class="o">&gt;</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">hasProject</span><span class="o">!</span><span class="p">:</span> <span class="nx">HasManyHasAssociationMixin</span><span class="o">&lt;</span><span class="nx">Project</span><span class="p">,</span> <span class="nx">number</span><span class="o">&gt;</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">countProjects</span><span class="o">!</span><span class="p">:</span> <span class="nx">HasManyCountAssociationsMixin</span><span class="p">;</span>
  <span class="kr">public</span> <span class="nx">createProject</span><span class="o">!</span><span class="p">:</span> <span class="nx">HasManyCreateAssociationMixin</span><span class="o">&lt;</span><span class="nx">Project</span><span class="o">&gt;</span><span class="p">;</span>

  <span class="kr">public</span> <span class="nx">readonly</span> <span class="nx">projects</span><span class="p">?:</span> <span class="nx">Project</span><span class="p">[];</span>
<span class="p">}</span>

<span class="nx">User</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span>
  <span class="p">{</span>
    <span class="na">email</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="k">new</span> <span class="nx">DataTypes</span><span class="p">.</span><span class="nx">STRING</span><span class="p">(</span><span class="mi">128</span><span class="p">),</span>
      <span class="na">allowNull</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="na">password</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="k">new</span> <span class="nx">DataTypes</span><span class="p">.</span><span class="nx">STRING</span><span class="p">(</span><span class="mi">128</span><span class="p">),</span>
      <span class="na">allowNull</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="p">},</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">tableName</span><span class="p">:</span> <span class="dl">'</span><span class="s1">users</span><span class="dl">'</span><span class="p">,</span>
    <span class="nx">sequelize</span><span class="p">,</span> <span class="c1">// required</span>
  <span class="p">},</span>
<span class="p">);</span>

<span class="nx">User</span><span class="p">.</span><span class="nx">hasMany</span><span class="p">(</span><span class="nx">Project</span><span class="p">,</span> <span class="p">{</span>
  <span class="na">sourceKey</span><span class="p">:</span> <span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">foreignKey</span><span class="p">:</span> <span class="dl">'</span><span class="s1">ownerId</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">as</span><span class="p">:</span> <span class="dl">'</span><span class="s1">projects</span><span class="dl">'</span><span class="p">,</span> 
<span class="p">});</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">User</span><span class="p">;</span>
</code></pre></div></div>

<p>이제 다시 <code class="highlighter-rouge">src/database/models/index.ts</code> 파일로 돌아와 정의해 준 모델들을 실행시켜 준다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">User</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./user</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">Project</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./project</span><span class="dl">'</span><span class="p">;</span>

<span class="k">export</span> <span class="o">*</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./sequelize</span><span class="dl">'</span><span class="p">;</span>

<span class="nx">cexport</span> <span class="nx">onst</span> <span class="nx">models</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">User</span><span class="p">,</span> <span class="nx">Project</span> <span class="p">};</span>
</code></pre></div></div>

<h3 id="서버와-연결하기">서버와 연결하기</h3>

<p>서버가 실행될 때 db에 연결하고, 싱크 작업을 하기 위해 아래 <code class="highlighter-rouge">server.ts</code> 파일에 아래 코드를 추가한다. <code class="highlighter-rouge">sync: true</code>로 하면 서버 실행시 마다 테이블을 재생성하게 되므로 주의해 주어야 한다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">...</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">sequelize</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./database/models</span><span class="dl">'</span><span class="p">;</span>
<span class="p">...</span>

<span class="c1">// Create Express server</span>
<span class="kd">const</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>

<span class="c1">// Connect Sequelize MySQL</span>
<span class="nx">sequelize</span>
  <span class="p">.</span><span class="nx">sync</span><span class="p">({</span> <span class="na">force</span><span class="p">:</span> <span class="kc">false</span> <span class="p">})</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">DATABASE CONNECTED!</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">})</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">((</span><span class="na">e</span><span class="p">:</span> <span class="nb">Error</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
  <span class="p">});</span>
</code></pre></div></div>
:ET