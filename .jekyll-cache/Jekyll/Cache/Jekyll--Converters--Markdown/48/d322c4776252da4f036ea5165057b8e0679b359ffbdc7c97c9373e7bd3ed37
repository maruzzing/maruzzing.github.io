I"')<p>현재 진행중인 프로젝트에서 상단 탭바 구현이 필요한데, React Navigation에서 제공하는 것 만으로는 디자인적으로 구현이 어려웠다. 그래서 커스텀 Tab Bar 를 적용하는 방법에 대해 알아보았다.</p>

<p>간단하게 요약하자면, <code class="highlighter-rouge">createMaterialTopTabNavigator</code> 의 TabNavigatorConfig 옵션으로 <code class="highlighter-rouge">tabBarComponent</code>를 커스텀 컴포넌트로 설정해 주면 된다.</p>

<h3 id="navigationjs-정의">Navigation.js 정의</h3>

<p>먼저 navigation.js 파일에서 TopTabNavigator의 RouteConfigs를 정의해 주고, TabNavigatorConfig로 <code class="highlighter-rouge">tabBarComponent: TopTabBar</code> 속성을 정의해 준다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">TopTabNavigator</span> <span class="o">=</span> <span class="nx">createMaterialTopTabNavigator</span><span class="p">(</span>
  <span class="p">{</span>
    <span class="na">route1</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">screen</span><span class="p">:</span> <span class="nx">Route1Screen</span><span class="p">,</span>
      <span class="na">params</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">title</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Tab1</span><span class="dl">'</span>
      <span class="p">}</span>
    <span class="p">},</span>
    <span class="na">route2</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">screen</span><span class="p">:</span> <span class="nx">Route2Screen</span><span class="p">,</span>
      <span class="na">params</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">title</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Tab2</span><span class="dl">'</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">tabBarComponent</span><span class="p">:</span> <span class="nx">TopTabBar</span>
  <span class="p">}</span>
<span class="p">);</span>
</code></pre></div></div>

<h3 id="toptabbar-컴포넌트-정의">TopTabBar 컴포넌트 정의</h3>

<p>이제, TopTabBar 컴포넌트를 정의해 주어야 한다. <code class="highlighter-rouge">navigation</code>을 <code class="highlighter-rouge">props</code>로 전달받는데, <code class="highlighter-rouge">navigation.state.routes</code>에 navigation.js에서 정의해 주었던 route가 array 형태로 전달되어진다. 이 routes를 커스텀 Tab 컴포넌트로 매핑해 주면 된다.
그냥 렌더하면 탭바가 statusbar 영역을 침범하게 되는데, <code class="highlighter-rouge">react-native-status-bar-height</code> 모듈을 사용하면 statusbar의 높이를 알 수 있으므로 이 부분을 style로 보완해 준다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">getStatusBarHeight</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native-status-bar-height</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">Tab</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./Tab</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">TopTabBar</span> <span class="o">=</span> <span class="nx">props</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">{</span> <span class="nx">navigation</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">props</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">routes</span> <span class="o">=</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">routes</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">containerStyle</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">marginTop</span><span class="p">:</span> <span class="nx">getStatusBarHeight</span><span class="p">(),</span>
    <span class="na">height</span><span class="p">:</span> <span class="mi">36</span><span class="p">,</span>
    <span class="na">backgroundColor</span><span class="p">:</span> <span class="dl">'</span><span class="s1">white</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">flexDirection</span><span class="p">:</span> <span class="dl">'</span><span class="s1">row</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">justifyContent</span><span class="p">:</span> <span class="dl">'</span><span class="s1">center</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">alignItems</span><span class="p">:</span> <span class="dl">'</span><span class="s1">center</span><span class="dl">'</span>
  <span class="p">};</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="p">&lt;</span><span class="nc">View</span> <span class="na">style=</span><span class="si">{</span><span class="nx">containerStyle</span><span class="si">}</span><span class="p">&gt;</span>
      <span class="si">{</span><span class="nx">routes</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">route</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span>
          <span class="p">&lt;</span><span class="nc">Tab</span>
            <span class="na">key=</span><span class="si">{</span><span class="nx">route</span><span class="p">.</span><span class="nx">key</span><span class="si">}</span>
            <span class="na">title=</span><span class="si">{</span><span class="nx">route</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">title</span><span class="si">}</span>
            <span class="na">onPress=</span><span class="si">{</span><span class="p">()</span> <span class="o">=&gt;</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="nx">route</span><span class="p">.</span><span class="nx">routeName</span><span class="p">)</span><span class="si">}</span>
            <span class="na">focused=</span><span class="si">{</span><span class="nx">navigation</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">index</span> <span class="o">===</span> <span class="nx">index</span><span class="si">}</span>
            <span class="na">index=</span><span class="si">{</span><span class="nx">index</span><span class="si">}</span>
          <span class="p">/&gt;</span>
        <span class="p">);</span>
      <span class="p">})</span><span class="si">}</span>
    <span class="p">&lt;/</span><span class="nc">View</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">};</span>
<span class="k">export</span> <span class="k">default</span> <span class="nx">TopTabBar</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="tab-컴포넌트-정의">Tab 컴포넌트 정의</h3>

<p>TabBar를 구성하는 Tab 컴포넌트를 정의해 준다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">Tab</span> <span class="o">=</span> <span class="p">({</span> <span class="nx">focused</span><span class="p">,</span> <span class="nx">title</span><span class="p">,</span> <span class="nx">onPress</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">textStyle</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">fontSize</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span>
    <span class="na">color</span><span class="p">:</span> <span class="nx">focused</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">#535356</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">#999999</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">};</span>
  <span class="kd">const</span> <span class="nx">bottomBarStyle</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">height</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
    <span class="na">borderRadius</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
    <span class="na">backgroundColor</span><span class="p">:</span> <span class="dl">'</span><span class="s1">blue</span><span class="dl">'</span>
  <span class="p">};</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="p">&lt;</span><span class="nc">TouchableOpacity</span> <span class="na">onPress=</span><span class="si">{</span><span class="nx">onPress</span><span class="si">}</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nc">Text</span> <span class="na">style=</span><span class="si">{</span><span class="nx">textStyle</span><span class="si">}</span><span class="p">&gt;</span><span class="si">{</span><span class="nx">title</span><span class="si">}</span><span class="p">&lt;/</span><span class="nc">Text</span><span class="p">&gt;</span>
      <span class="si">{</span><span class="nx">focused</span> <span class="p">?</span> <span class="p">&lt;</span><span class="nc">View</span> <span class="na">style=</span><span class="si">{</span><span class="nx">bottomBarStyle</span><span class="si">}</span> <span class="p">/&gt;</span> <span class="p">:</span> <span class="kc">null</span><span class="si">}</span>
    <span class="p">&lt;/</span><span class="nc">TouchableOpacity</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">};</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">Tab</span><span class="p">;</span>
</code></pre></div></div>
:ET