I":<p>지난해 애플 또한 애플로 로그인 하기 서비스를 시작했는데, 주목할 점은 기존 앱스토어 심사지침 상 서비스 자체 로그인 없이 소셜로그인 만으로 계정 승인이 이루어진 경우 반려 사유가 되었지만, 애플 로그인을 병행하는 경우 서드파티 로그인 만으로도 서비스가 가능하다는 점이다. [참고: <a href="https://developer.apple.com/kr/app-store/review/guidelines/#sign-in-with-apple">App Store 심사 지침</a>]</p>

<p>이번 포스팅 에서는 리액트 네이티브에서 애플로 로그인을 구현해 보려고 한다.</p>

<h2 id="apple-developer-대시보드-설정">Apple Developer 대시보드 설정</h2>

<p>먼저, 애플로 로그인 하기를 구현하기 위해서는 애플 개발자 계정에서 프로젝트의 Identifier와 Key를 발급 받아야 한다.</p>

<p><a href="https://developer.apple.com/">애플 개발자 사이트</a>에 로그인 한 후 <code class="highlighter-rouge">Account &gt; Certificates, IDs &amp; Profiles</code> 메뉴로 접속해 <code class="highlighter-rouge">Identifiers</code>의 <code class="highlighter-rouge">+</code> 추가 버튼을 누른다.</p>

<p><img src="/images/sign_in_with_apple_1.png" alt="Sign In With Apple" title="Sign In With Apple" /></p>

<p>아래 그림과 같이 <code class="highlighter-rouge">App IDs</code>를 체크하고 다음 단계로 이동한다.</p>

<p><img src="/images/sign_in_with_apple_2.png" alt="Sign In With Apple" title="Sign In With Apple" /></p>

<p>Description과 프로젝트 번들ID를 입력한 후 아래 Capabilities에서 <code class="highlighter-rouge">Sign In with Apple</code>을 선택한 후 우측에 	Enable as a primary App ID를 확인한 후 다음 단계로 이동해 앱을 등록한다.</p>

<p><img src="/images/sign_in_with_apple_3.png" alt="Sign In With Apple" title="Sign In With Apple" /></p>

<p>등록이 성공적으로 이루어 졌는지는 <code class="highlighter-rouge">Identifiers</code> 메뉴 리스트에서 확인할 수 있다. 성공적으로 등록이 완료 되었으면 <code class="highlighter-rouge">Keys</code> 메뉴로 이동해 새로운 키를 등록할 차례이다.</p>

<p><img src="/images/sign_in_with_apple_4.png" alt="Sign In With Apple" title="Sign In With Apple" /></p>

<p>적절한 키 이름을 입력하고, <code class="highlighter-rouge">Sign in with Apple</code>을 선택한 뒤 <code class="highlighter-rouge">Configure</code> 버튼을 눌러 다음 단계로 이동한다.</p>

<p><img src="/images/sign_in_with_apple_5.png" alt="Sign In With Apple" title="Sign In With Apple" /></p>

<p>Primary App ID로 좀 전에 생성했던 앱 아이디를 선택한 뒤 저장하고 등록한다.</p>

<p><img src="/images/sign_in_with_apple_6.png" alt="Sign In With Apple" title="Sign In With Apple" /></p>

<p>등록 후 다운로드 까지 완료하면 Apple Developer 계정에서의 설정은 끝!!</p>

<p><img src="/images/sign_in_with_apple_7.png" alt="Sign In With Apple" title="Sign In With Apple" /></p>

<h2 id="프로젝트-설정">프로젝트 설정</h2>

<p>Xcode에서 프로젝트 <code class="highlighter-rouge">.xcworkspace</code>를 열고, 프로젝트를 선택, <code class="highlighter-rouge">Signing and Capabilities</code> 메뉴로 이동한다.</p>

<p>먼저, Signing 섹션에서 방금 Key를 발급받은 애플 계정의 Team울 선택하고, <code class="highlighter-rouge">+Capability</code>에서 <code class="highlighter-rouge">Sign In With Apple</code>을 추가한다.</p>

<p><img src="/images/sign_in_with_apple_8.png" alt="Sign In With Apple" title="Sign In With Apple" /></p>

<p><img src="/images/sign_in_with_apple_9.png" alt="Sign In With Apple" title="Sign In With Apple" /></p>

<h2 id="모듈을-이용한-애플로-로그인-구현">모듈을 이용한 애플로 로그인 구현</h2>

<h3 id="1-모듈-설치">1. 모듈 설치</h3>

<p><a href="https://github.com/invertase/react-native-apple-authentication">@invertase/react-native-apple-authentication</a> 모듈을 설치한다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn add @invertase/react-native-apple-authentication
<span class="nb">cd </span>ios <span class="o">&amp;&amp;</span> pod <span class="nb">install</span> <span class="o">&amp;&amp;</span> <span class="nb">cd</span> ..
</code></pre></div></div>

<h3 id="2-버튼-ui-생성">2. 버튼 UI 생성</h3>

<p><a href="https://github.com/invertase/react-native-apple-authentication">@invertase/react-native-apple-authentication</a> 에서 제공하는 <code class="highlighter-rouge">AppleButton</code> API를 통해 UI를 쉽게 생성할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">SafeAreaView</span><span class="p">,</span> <span class="nx">StyleSheet</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span>
  <span class="nx">AppleButton</span><span class="p">,</span>
  <span class="nx">AppleAuthRequestOperation</span><span class="p">,</span>
  <span class="nx">AppleAuthRequestScope</span><span class="p">,</span>
  <span class="nx">AppleAuthCredentialState</span><span class="p">,</span>
<span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@invertase/react-native-apple-authentication</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">App</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">onAppleButtonPress</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{};</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">SafeAreaView</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">styles</span><span class="p">.</span><span class="nx">container</span><span class="p">}</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">AppleButton</span>
        <span class="nx">buttonStyle</span><span class="o">=</span><span class="p">{</span><span class="nx">AppleButton</span><span class="p">.</span><span class="nx">Style</span><span class="p">.</span><span class="nx">BLACK</span><span class="p">}</span>
        <span class="nx">buttonType</span><span class="o">=</span><span class="p">{</span><span class="nx">AppleButton</span><span class="p">.</span><span class="nx">Type</span><span class="p">.</span><span class="nx">SIGN_IN</span><span class="p">}</span>
        <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">styles</span><span class="p">.</span><span class="nx">appleButton</span><span class="p">}</span>
        <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">onAppleButtonPress</span><span class="p">()}</span>
      <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/SafeAreaView</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">styles</span> <span class="o">=</span> <span class="nx">StyleSheet</span><span class="p">.</span><span class="nx">create</span><span class="p">({</span>
  <span class="na">container</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">flex</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">justifyContent</span><span class="p">:</span> <span class="dl">'</span><span class="s1">center</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">alignItems</span><span class="p">:</span> <span class="dl">'</span><span class="s1">center</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="na">appleButton</span><span class="p">:</span> <span class="p">{</span><span class="na">width</span><span class="p">:</span> <span class="dl">'</span><span class="s1">70%</span><span class="dl">'</span><span class="p">,</span> <span class="na">height</span><span class="p">:</span> <span class="mi">45</span><span class="p">},</span>
<span class="p">});</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">App</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="3-로그인-프로세스-정의">3. 로그인 프로세스 정의</h3>

<p><a href="https://github.com/invertase/react-native-apple-authentication/blob/master/docs/interfaces/_lib_index_d_.rnappleauth.module.md#performrequest"><code class="highlighter-rouge">performRequest</code></a> 메소드의 <a href="https://github.com/invertase/react-native-apple-authentication/blob/master/docs/enums/_lib_index_d_.rnappleauth.appleauthrequestoperation.md"><code class="highlighter-rouge">requestedOperation</code></a>를 통해 로그인, 로그아웃 등을 진행할 수 있으며, <a href="https://github.com/invertase/react-native-apple-authentication/blob/master/docs/enums/_lib_index_d_.rnappleauth.appleauthrequestscope.md"><code class="highlighter-rouge">requestedScopes</code></a>로 유저 정보를 요청할 수 있다.</p>

<p>그리고 <a href="https://github.com/invertase/react-native-apple-authentication/blob/master/docs/enums/_lib_index_d_.rnappleauth.appleauthcredentialstate.md"><code class="highlighter-rouge">getCredentialStateForUser</code></a>메소드를 통해 현재 승인 상태를 확인할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">appleAuth</span><span class="p">,</span> <span class="p">{</span>
  <span class="nx">AppleButton</span><span class="p">,</span>
  <span class="nx">AppleAuthRequestOperation</span><span class="p">,</span>
  <span class="nx">AppleAuthRequestScope</span><span class="p">,</span>
  <span class="nx">AppleAuthCredentialState</span><span class="p">,</span>
  <span class="nx">AppleAuthError</span><span class="p">,</span>
<span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@invertase/react-native-apple-authentication</span><span class="dl">'</span><span class="p">;</span>

  <span class="p">...</span>
  <span class="kd">const</span> <span class="nx">onAppleButtonPress</span> <span class="o">=</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
      <span class="kd">const</span> <span class="nx">responseObject</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">appleAuth</span><span class="p">.</span><span class="nx">performRequest</span><span class="p">({</span>
        <span class="na">requestedOperation</span><span class="p">:</span> <span class="nx">AppleAuthRequestOperation</span><span class="p">.</span><span class="nx">LOGIN</span><span class="p">,</span>
        <span class="na">requestedScopes</span><span class="p">:</span> <span class="p">[</span><span class="nx">AppleAuthRequestScope</span><span class="p">.</span><span class="nx">EMAIL</span><span class="p">],</span>
      <span class="p">});</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">responseObject:::</span><span class="dl">'</span><span class="p">,</span> <span class="nx">responseObject</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">credentialState</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">appleAuth</span><span class="p">.</span><span class="nx">getCredentialStateForUser</span><span class="p">(</span>
        <span class="nx">responseObject</span><span class="p">.</span><span class="nx">user</span><span class="p">,</span>
      <span class="p">);</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">credentialState</span> <span class="o">===</span> <span class="nx">AppleAuthCredentialState</span><span class="p">.</span><span class="nx">AUTHORIZED</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">user is authenticated</span><span class="dl">'</span><span class="p">);</span>
      <span class="p">}</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">.</span><span class="nx">code</span> <span class="o">===</span> <span class="nx">AppleAuthError</span><span class="p">.</span><span class="nx">CANCELED</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">canceled</span><span class="dl">'</span><span class="p">);</span>
      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">);</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">};</span>
  <span class="p">...</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">appleAuth.performRequest</code>를 통해 <code class="highlighter-rouge">identityToken</code>, <code class="highlighter-rouge">authorizationCode</code>, <code class="highlighter-rouge">email</code>, <code class="highlighter-rouge">fullName</code>, <code class="highlighter-rouge">user</code> 정보 등을 얻을 수 있다.</p>
:ET